         MSEC	DATA   29H       ;毫秒
		 SEC    DATA   30H		 ;秒
		 MIN    DATA   31H		 ;分
		 HOUR   DATA   32H    	 ;时	 
		 KECD	DATA   34H       ;original key code
         PST    DATA   35H       ;position,0:hour;1:minute;2:second
	     STA	BIT	   20H       ;state flag,0:runing state; 1:modify state
	     KEYOK	BIT	   21H       ;
		 ORG    0000H
         SJMP   MAIN
         ORG    000BH			 ;定时器中断0入口 
         LJMP   IT
         ORG    0030H

MAIN:    MOV    DPTR,#TAB
         MOV    P2,#0			 ;开始不输出
		 MOV    MSEC,#0
         MOV    SEC,#0			 ;秒，分，时单元置0
         MOV    MIN,#0
		 MOV    HOUR,#0
		 CLR    STA;the orignal state=0
		 MOV	PST,#0;select hour postion
		 MOV    R7,#20			  ;一次50000us,20次就是1s
		 MOV    R0,#30H			  ;显示单元指针
		 MOV    TMOD,#01H		  ;定时器计数器工作在方式1
		 MOV    TH0,#3CH		  ;初值15536
		 MOV    TL0,#0B0H
		 MOV    IE,#82H
		 SETB   TR0		          ;开放中断
		
		 DISP:    MOV     A,@R0		 
         ANL     A,#0FH
		 MOVC    A,@A+DPTR
		 MOV     P1,A
		 SETB    P2.0
		 CLR     P2.0
		 MOV     A,@R0
		 ANL     A,#0F0H
		 SWAP    A
		 MOVC    A,@A+DPTR
		 MOV     P1,A
		 SETB    P2.1
		 CLR     P2.1
		 INC     R0
		 MOV     A,@R0		 
         ANL     A,#0FH
		 MOVC    A,@A+DPTR
		 MOV     P1,A
		 SETB    P2.2
		 CLR     P2.2
		 MOV     A,@R0
		 ANL     A,#0F0H
		 SWAP    A
		 MOVC    A,@A+DPTR 
		 MOV     P1,A
		 SETB    P2.3
		 CLR     P2.3
		 INC     R0
		 MOV     A,@R0		 
         ANL     A,#0FH
		 MOVC    A,@A+DPTR
		 MOV     P1,A
		 SETB    P2.4
		 CLR     P2.4
		 MOV     A,@R0
		 ANL     A,#0F0H
		 SWAP    A
		 MOVC    A,@A+DPTR
		 MOV     P1,A
		 SETB    P2.5
		 CLR     P2.5
		 MOV     R0,#30H
		 MOV		C,STA;read state,check it should glitter
		 JNC		SLP;need not glitter
		 MOV		A,MSEC
	     SUBB	A,#90
		 JC		SLP;need not clear led
		 MOV		A,PST;read position
		 CJNE	A,#0,GLT1
		 MOV		P1,#0FFH;clear hour uint
		 SETB	P2.4
		 CLR		P2.4
		 SETB	P2.5
		 CLR		P2.5
	     SJMP	SLP
GLT1:	CJNE	A,#1,GLT2
		MOV		P1,#0FFH;clear minute uint
		SETB	P2.2
		CLR		P2.2
		SETB	P2.3
		CLR		P2.3
		SJMP	SLP		
GLT2:	CJNE	A,#2,SLP
		MOV		P1,#0FFH;clear second uint
		SETB	P2.1
		CLR		P2.1
		SETB	P2.0
		CLR		P2.0		
SLP:	MOV		A,SEC; open alarm
		JNZ		SLP1
		MOV		A,MIN
		JNZ		SLP1
		SETB	P2.6
		SJMP	SLP2	
SLP1:	CLR		P2.6
SLP2:	ORL		PCON,#1
		LJMP	DISP
TAB:    DB   0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,0FFH
		 ;RETI

IT:	     MOV    TH0,#3CH		  ;中断程序
         MOV    TL0,#0B0H
		 LCALL  KEY
		 INC	MSEC
		 MOV	A,MSEC
		 CJNE	A,#100,EXIT
		 MOV	MSEC,#0;clear msed
		 MOV    R7,#20
		 MOV    A,SEC
		 ADD    A,#01H
		 DA     A
		 MOV    SEC,A
		 CJNE   A,#60H,EXIT
		 MOV    SEC,#0H
		 MOV    A,MIN
		 ADD    A,#01H
		 DA     A
		 MOV    MIN,A
		 CJNE   A,#60H,EXIT
		 MOV    MIN,#0H
		 MOV    A,HOUR
		 ADD    A,#01H
		 MOV    HOUR,A
		 CJNE   A,#24H,EXIT
		 MOV    HOUR,#0H
		 RETI

EXIT:    RETI


KEY:    MOV		A,P3
		CPL		A
		ANL		A,#3
		JNZ		KEY0;does not enter any key,return
		CLR		KEYOK;clear keyok flag
		LJMP	        KEXT			
KEY0:	        XCH		A,KECD;store current key code
		XRL		A,KECD;the same key as last time
		JZ		KEY1
		CLR		KEYOK;clear a key flag 	
		LJMP	KEXT
KEY1:	JB		KEYOK,KEXT;the key is already processed
		SETB	KEYOK;set keyok flag
		MOV		A,KECD;excecute key task
		CJNE	A,#1,KWK2
KWK1:	MOV		C,STA;read systme state
		JC		KWK10;is runing state?
		SETB	STA;into modify state
		MOV		PST,#0;display postion is set hour
		LJMP	KEXT;ruturn
KWK10:	INC		PST;if it in modify state,increase postion number
		MOV		A,PST
		CJNE	A,#3,KEXT;if it is bigger than the max postion,clear it	
		MOV		PST,#0;
		CLR		STA;into runing state	
		LJMP	KEXT;
KWK2:	MOV		C,STA
		JNC		KEXT;in runing state,do not respond inc key
		MOV		A,PST
		JNZ		KWK21;increase hour
		MOV		A,HOUR
		ADD		A,#1
		DA		A
		CJNE	A,#24H,KWK20;
		CLR		A;clear hour
KWK20:	MOV		HOUR,A
		LJMP	KEXT
KWK21:	MOV		A,PST
		CJNE	A,#1,KWK23
		MOV		A,	MIN
		ADD		A,#1
		DA		A
		CJNE	A,#60H,KWK22
		CLR		A;clear minute
KWK22:	MOV		MIN,A
		LJMP	KEXT
KWK23:	MOV		A,PST
		CJNE	A,#2,KEXT
		MOV		A,SEC
		ADD		A,#1
		DA		A
		CJNE	A,#60H,KEY24
		CLR		A;clear second
KEY24:	MOV		SEC,A;
KEXT:	RET
         
DELAY:        MOV	 R2,#2
              MOV    R3,#10
LP2:          MOV    B,#248
	          DJNZ   B,$
	          DJNZ   R2,LP2
	          DJNZ   R3,LP2
	          RET 

END